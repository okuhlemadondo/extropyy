{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 93, "column": 0}, "map": {"version":3,"sources":["file:///Users/okuhlemadondo/repos/extropyy/lib/mdx.js"],"sourcesContent":["import 'server-only';\nimport fs from 'fs';\nimport path from 'path';\nimport { serialize } from 'next-mdx-remote/serialize';\nimport remarkGfm from 'remark-gfm';\nimport remarkMath from 'remark-math';\nimport rehypeKatex from 'rehype-katex';\nimport rehypeHighlight from 'rehype-highlight';\nimport rehypeSlug from 'rehype-slug';\nimport rehypeAutolinkHeadings from 'rehype-autolink-headings';\nimport matter from 'gray-matter';\n\nexport async function getMdxSource(source) {\n    const mdxSource = await serialize(source, {\n        mdxOptions: {\n            remarkPlugins: [remarkGfm, remarkMath],\n            rehypePlugins: [rehypeKatex, rehypeHighlight, rehypeSlug, rehypeAutolinkHeadings],\n        },\n        parseFrontmatter: false,\n    });\n\n    return mdxSource;\n}\n\nexport async function getPostBySlug(slug) {\n    const postsDirectory = path.join(process.cwd(), 'posts');\n    const fullPath = path.join(postsDirectory, `${slug}.md`);\n    const fileContents = fs.readFileSync(fullPath, 'utf8');\n\n    const { data, content } = matter(fileContents);\n    const mdxSource = await getMdxSource(content);\n\n    return {\n        slug,\n        frontMatter: data,\n        mdxSource\n    };\n}\n\nexport async function getAllPosts() {\n    const postsDirectory = path.join(process.cwd(), 'posts');\n    const filenames = fs.readdirSync(postsDirectory);\n\n    const posts = filenames\n        .filter(filename => filename.endsWith('.md'))\n        .map(filename => {\n            const slug = filename.replace(/\\.md$/, '');\n            const fullPath = path.join(postsDirectory, filename);\n            const fileContents = fs.readFileSync(fullPath, 'utf8');\n            const { data } = matter(fileContents);\n\n            return {\n                slug,\n                frontMatter: data,\n            };\n        });\n\n    return posts;\n} "],"names":[],"mappings":";;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;AAEO,eAAe,aAAa,MAAM;IACrC,MAAM,YAAY,MAAM,CAAA,GAAA,oKAAA,CAAA,YAAS,AAAD,EAAE,QAAQ;QACtC,YAAY;YACR,eAAe;gBAAC,0HAAA,CAAA,UAAS;gBAAE,4HAAA,CAAA,UAAU;aAAC;YACtC,eAAe;gBAAC,8HAAA,CAAA,UAAW;gBAAE,sIAAA,CAAA,UAAe;gBAAE,4HAAA,CAAA,UAAU;gBAAE,4JAAA,CAAA,UAAsB;aAAC;QACrF;QACA,kBAAkB;IACtB;IAEA,OAAO;AACX;AAEO,eAAe,cAAc,IAAI;IACpC,MAAM,iBAAiB,iGAAA,CAAA,UAAI,CAAC,IAAI,CAAC,QAAQ,GAAG,IAAI;IAChD,MAAM,WAAW,iGAAA,CAAA,UAAI,CAAC,IAAI,CAAC,gBAAgB,GAAG,KAAK,GAAG,CAAC;IACvD,MAAM,eAAe,6FAAA,CAAA,UAAE,CAAC,YAAY,CAAC,UAAU;IAE/C,MAAM,EAAE,IAAI,EAAE,OAAO,EAAE,GAAG,CAAA,GAAA,qHAAA,CAAA,UAAM,AAAD,EAAE;IACjC,MAAM,YAAY,MAAM,aAAa;IAErC,OAAO;QACH;QACA,aAAa;QACb;IACJ;AACJ;AAEO,eAAe;IAClB,MAAM,iBAAiB,iGAAA,CAAA,UAAI,CAAC,IAAI,CAAC,QAAQ,GAAG,IAAI;IAChD,MAAM,YAAY,6FAAA,CAAA,UAAE,CAAC,WAAW,CAAC;IAEjC,MAAM,QAAQ,UACT,MAAM,CAAC,CAAA,WAAY,SAAS,QAAQ,CAAC,QACrC,GAAG,CAAC,CAAA;QACD,MAAM,OAAO,SAAS,OAAO,CAAC,SAAS;QACvC,MAAM,WAAW,iGAAA,CAAA,UAAI,CAAC,IAAI,CAAC,gBAAgB;QAC3C,MAAM,eAAe,6FAAA,CAAA,UAAE,CAAC,YAAY,CAAC,UAAU;QAC/C,MAAM,EAAE,IAAI,EAAE,GAAG,CAAA,GAAA,qHAAA,CAAA,UAAM,AAAD,EAAE;QAExB,OAAO;YACH;YACA,aAAa;QACjB;IACJ;IAEJ,OAAO;AACX","debugId":null}}]
}