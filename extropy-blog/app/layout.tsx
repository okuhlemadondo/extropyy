// app/layout.tsx
import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import "./globals.css";
import Header from '../components/Header';
import Footer from '../components/Footer';
import Cursor from '../components/Cursor';
import CanvasBackground from '../components/CanvasBackground';
import LoadingScreen from '../components/LoadingScreen';
import { useState, useEffect } from 'react'; // Import useState and useEffect
import { useRouter } from 'next/router';

const geistSans = Geist({
    variable: "--font-geist-sans",
    subsets: ["latin"],
});

const geistMono = Geist_Mono({
    variable: "--font-geist-mono",
    subsets: ["latin"],
});

export const metadata: Metadata = {
    title: "Create Next App",
    description: "Generated by create next app",
};

export default function RootLayout({
    children,
}: Readonly<{
    children: React.ReactNode;
}>) {
    const [darkMode, setDarkMode] = useState(typeof window !== 'undefined' ? window.matchMedia('(prefers-color-scheme: dark)').matches : true); // Or use a cookie value if stored
    const [isLoading, setIsLoading] = useState(false);
    const router = useRouter();
    useEffect(() => {
        document.body.classList.add(darkMode ? 'dark-mode' : 'light-mode');
        document.body.classList.remove(darkMode ? 'light-mode' : 'dark-mode');
    }, [darkMode]);
    const toggleDarkMode = () => {
        setDarkMode(!darkMode);
    }

    return (
        <html lang="en" className={darkMode ? 'dark-mode' : 'light-mode'}>
            <body className={`${geistSans.variable} ${geistMono.variable} antialiased`}>
                <Cursor />
                <LoadingScreen isLoading={isLoading} />
                <CanvasBackground />
                <Header darkMode={darkMode} toggleDarkMode={toggleDarkMode} onSearch={() => { /* Add your search logic here */ }} />
                <main id="page-content" className="container mx-auto px-6 py-12">
                    {children}
                </main>
                <Footer />
            </body>
        </html>
    );
}